-- MySQL Script generated by MySQL Workbench
-- Tue May  7 07:36:10 2024
-- Version: 1.0

DROP DATABASE IF EXISTS BSAGP;
CREATE DATABASE IF NOT EXISTS BSAGP;

USE BSAGP;

CREATE TABLE IF NOT EXISTS Produtos 
(
    id_produto INT NOT NULL AUTO_INCREMENT,
    nome_produto VARCHAR(20) NOT NULL,
    preco DECIMAL(4,2) NOT NULL,
    quantidade_estoque INT NOT NULL,
    categoria VARCHAR(12) NOT NULL,
    PRIMARY KEY (id_produto)
);

CREATE TABLE IF NOT EXISTS Promocoes 
(
    id_promocao INT NOT NULL AUTO_INCREMENT,
    desconto DECIMAL(4,2) NOT NULL,
    data_inicio DATE NOT NULL,
    data_termino DATE NOT NULL,
    PRIMARY KEY (id_promocao)
);

CREATE TABLE IF NOT EXISTS Funcionarios 
(
    id_funcionario INT NOT NULL AUTO_INCREMENT,
    nome_funcionario VARCHAR(45) NOT NULL,
    usuario_funcionario VARCHAR(45) NOT NULL,
    senha VARCHAR(16) NOT NULL,
    PRIMARY KEY (id_funcionario)
);

CREATE TABLE IF NOT EXISTS Clientes 
(
    id_cliente INT NOT NULL AUTO_INCREMENT,
    nome_cliente VARCHAR(45) NOT NULL,
    cpf_cliente BIGINT NOT NULL,
    PRIMARY KEY (id_cliente)
);


CREATE TABLE IF NOT EXISTS Vendas 
(
    id_venda INT NOT NULL AUTO_INCREMENT,
    id_funcionario INT NOT NULL,
    id_cliente INT NULL,
    metodo_pagamento VARCHAR(10) NOT NULL,
    PRIMARY KEY (id_venda),
    FOREIGN KEY (id_funcionario) REFERENCES Funcionarios (id_funcionario),
    FOREIGN KEY (id_cliente) REFERENCES Clientes (id_cliente)
);

CREATE TABLE IF NOT EXISTS Carrinho 
(
    id_carrinho INT NOT NULL AUTO_INCREMENT,
    id_produto INT NOT NULL,
    id_venda INT NOT NULL,
    quantidade INT NOT NULL,
    PRIMARY KEY (id_carrinho),
    FOREIGN KEY (id_produto) REFERENCES Produtos (id_produto),
    FOREIGN KEY (id_venda) REFERENCES Vendas (id_venda)
);

CREATE TABLE IF NOT EXISTS Produtos_Promocao 
(
    id_produtos_promocao INT NOT NULL AUTO_INCREMENT,
    id_produto INT NOT NULL,
    id_promocao INT NOT NULL,
    PRIMARY KEY (id_produtos_promocao),
    FOREIGN KEY (id_produto) REFERENCES Produtos (id_produto),
    FOREIGN KEY (id_promocao) REFERENCES Promocoes (id_promocao)
);
